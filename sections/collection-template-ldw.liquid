{%- assign per_row = section.settings.per_row -%}
{%- assign paginate_by = per_row | times: section.settings.rows_per_page -%}

{% paginate collection.products by paginate_by %}

<div
  id="CollectionSection"
  data-section-id="{{ section.id }}"
  data-section-type="collection-template">

  {%- if section.settings.subcollection_style == 'above' -%}
    {%- include 'subcollections', per_row: section.settings.subcollections_per_row -%}
  {%- endif -%}

  <div class="collection-filter">
    {%- assign current_filter_size = current_tags | size -%}
    <div class="collection-filter__item collection-filter__item--drawer">
      <button
        type="button"
        class="js-drawer-open-collection-filters btn btn--tertiary{% unless current_filter_size == 0 %} btn--tertiary-active{% endunless %}"
        aria-controls="FilterDrawer">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-filter" viewBox="0 0 64 64"><path d="M48 42h10M48 42a5 5 0 1 1-5-5 5 5 0 0 1 5 5zM7 42h31M16 22H6M16 22a5 5 0 1 1 5 5 5 5 0 0 1-5-5zM57 22H26"/></svg>
        {{ 'collections.filters.title_tags' | t }}
        {%- if current_filter_size > 0 -%}
          ({{ current_filter_size }})
        {%- endif -%}
      </button>
    </div>

    <div class="collection-filter__item collection-filter__item--count small--hide">
      {%- if product.type == 'Pot' -%}
        {% assign nb_variants_total = 0 %}
        {%- for product in collection.products -%}
          {%- for option in product.options -%}
            {% if option == 'Color' or option == 'Couleur' %}
              {% assign index             = forloop.index0 %}
              {% assign colorlist         = '' %}
              {% assign color             = '' %}
              {% assign nb_variants       = 0 %}
              {% for variant in product.variants %}
                {% capture color %}
                  {{ variant.options[index] }}
                {% endcapture %}
                {% unless colorlist contains color %}
                  {% capture tempList %}
                    {{ colorlist | append: color | append: " " }}
                  {% endcapture %}
                  {% assign colorlist = tempList %}
                  {% assign nb_variants = nb_variants|plus:1 %}
                {% endunless %}
              {% endfor %}
              {% assign nb_variants_total = nb_variants_total|plus:nb_variants|minus:1 %}
            {% endif %}
          {%- endfor -%}
          {%- if section.settings.enable_collection_count -%}
            {% assign product_count = collection.products_count |plus: nb_variants_total %}
            {{ 'collections.general.items_with_count' | t: count: product_count }}
          {%- endif -%}
        {%- endfor -%}
      {%- else -%}
        {%- if section.settings.enable_collection_count -%}
          {{ 'collections.general.items_with_count' | t: count: collection.products_count }}
        {%- endif -%}
      {%- endif -%}
    </div>

    <div class="collection-filter__item collection-filter__item--sort">
      <div class="collection-filter__sort-container">
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        <label for="SortBy" class="hidden-label">{{ 'collections.sorting.title' | t }}</label>
        <select name="SortBy" id="SortBy" data-default-sortby="{{ collection.default_sort_by }}">
          <option value="title-ascending"{% if sort_by == collection.default_sort_by %} selected="selected"{% endif %}>{{ 'collections.sorting.title' | t }}</option>
          {% for option in collection.sort_options %}
            <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>{{ option.name }}</option>
          {% endfor %}
        </select>
      </div>
    </div>
  </div>

  {%- if section.settings.enable_collection_count -%}
    <p class="medium-up--hide text-center">{{ 'collections.general.items_with_count' | t: count: collection.products_count }}</p>
  {%- endif -%}

  <div class="grid">
  	<div class="medium-up--one-third grid__item">
      {%- include 'collection-description-ldw' -%}
    </div>
  	<div class="medium-up--two-thirds grid__item">
      <div
        class="grid grid--uniform grid--collection{% if section.settings.mobile_flush_grid %} small--grid--flush{% endif %}"
        data-scroll-to>
        {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}

        {% case per_row %}
        {% when 2 %}
          {%- assign grid_item_width = 'small--one-half medium-up--one-half' -%}
        {% when 3 %}
          {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
        {% when 4 %}
          {%- assign grid_item_width = 'small--one-half medium-up--one-quarter' -%}
        {% when 5 %}
          {%- assign grid_item_width = 'small--one-half medium-up--one-fifth' -%}
        {% endcase %}

        {%- for product in collection.products -%}
          {%- if product.type == 'Pot' -%}
            {%- for option in product.options -%}
              {% if option == 'Color' or option == 'Couleur' %}
                {% assign index     = forloop.index0 %}
                {% assign colorlist = '' %}
                {% assign color     = '' %}
                {% for variant in product.variants %}
                  {% capture color %}
                      {{ variant.options[index] }}
                  {% endcapture %}
                  {% assign variant_title_split = variant.title | split: "/" %}
                  {% assign variant_color_title = variant_title_split[0] %}
                  {% unless colorlist contains color %}
                    {%- include 'product-grid-item-variant-color' -%}
                    {% capture tempList %}
                      {{ colorlist | append: color | append: " " }}
                    {% endcapture %}
                    {% assign colorlist = tempList %}
                  {% endunless %}
                {% endfor %}
              {% endif %}
              {% unless product.options contains 'Color' or product.options contains 'Couleur' %}
                {%- include 'product-grid-item' -%}
              {% endunless %}
            {%- endfor -%}
          {%- else -%}
            {%- include 'product-grid-item' -%}
          {%- endif -%}
        {%- else -%}
          <div class="grid__item">
            <p>{{ 'collections.general.no_matches' | t }}</p>
          </div>
        {%- endfor -%}

      </div>
    </div>
  </div>

  {%- if section.settings.subcollection_style == 'below' -%}
    {%- include 'subcollections', per_row: section.settings.subcollections_per_row -%}
  {%- endif -%}

  {%- if paginate.pages > 1 -%}
    {%- include 'pagination' -%}
  {%- endif -%}


  {%- if settings.quick_shop_enable -%}
    {%- for product in collection.products -%}
      {%- if product.available -%}
        {%- include 'quick-shop-modal' -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
</div>

{% endpaginate %}

{% schema %}
  {
    "name": "Collection pages",
    "settings": [
      {
        "type": "header",
        "content": "Subcollections"
      },
      {
        "type": "paragraph",
        "content": "Links to collections from your menu will appear here. [Learn more](https://archetypethemes.co/blogs/impulse/how-do-i-create-subcollections)"
      },
      {
        "type": "select",
        "id": "subcollection_style",
        "label": "Subcollection style",
        "default": "above",
        "options": [
          {
            "value": "above",
            "label": "Above products"
          },
          {
            "value": "below",
            "label": "Below products"
          },
          {
            "value": "none",
            "label": "None"
          }
        ]
      },
      {
        "type": "range",
        "id": "subcollections_per_row",
        "label": "Subcollections per row",
        "default": 5,
        "min": 2,
        "max": 5,
        "step": 1
      },
      {
        "type": "header",
        "content": "Products"
      },
      {
        "type": "checkbox",
        "id": "enable_collection_count",
        "label": "Enable collection count",
        "default": true
      },
      {
        "type": "range",
        "id": "per_row",
        "label": "Products per row",
        "default": 4,
        "min": 2,
        "max": 5,
        "step": 1
      },
      {
        "type": "range",
        "id": "rows_per_page",
        "label": "Rows per page",
        "default": 7,
        "min": 3,
        "max": 20,
        "step": 1
      },
      {
        "type": "checkbox",
        "id": "mobile_flush_grid",
        "label": "Flush grid on mobile",
        "default": false
      }
    ]
  }
{% endschema %}
